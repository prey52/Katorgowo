// <auto-generated />
using System;
using JobOffers.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JobOffers.Migrations
{
    [DbContext(typeof(JobOffersDBcontext))]
    [Migration("20240516134611_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("JobOffers.DataBase.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Informatyka"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Medycyna"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Finanse"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Edukacja"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Inżynieria"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Handel"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Sztuka i design"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Administracja"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Sprzedaż"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Prawo"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Marketing"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Produkcja"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Transport"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Usługi"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Budownictwo"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Gastronomia"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Media i komunikacja"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Rolnictwo"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Nauka i badania"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Inne"
                        });
                });

            modelBuilder.Entity("JobOffers.DataBase.ContractType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContractTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Umowa o pracę"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Umowa zlecenie"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Umowa o dzieło"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Kontrakt B2B"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Umowa o pracę tymczasową"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Umowa na zastępstwo"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Umowa staż/praktyki"
                        });
                });

            modelBuilder.Entity("JobOffers.DataBase.JobOffer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AddDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Benefits")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<int>("ContractType")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RecruiterId")
                        .HasColumnType("int");

                    b.Property<string>("Requitements")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Title")
                        .HasColumnType("int");

                    b.Property<int>("WorkingTime")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("JobOffers");
                });

            modelBuilder.Entity("JobOffers.DataBase.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Statuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Oczekująca"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Odrzucona"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Opublikowana"
                        });
                });

            modelBuilder.Entity("JobOffers.DataBase.WorkingTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WorkingTimes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "1/4 etatu"
                        },
                        new
                        {
                            Id = 2,
                            Name = "1/2 etatu"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Pełen etat"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Inne"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
